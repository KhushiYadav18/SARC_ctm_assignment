{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Swal from \"sweetalert2\";\nfunction useProfile() {\n  _s();\n  const [ProfileData, setProfileData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    gender: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileData({\n      ...ProfileData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/auth/profile/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(ProfileData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || \"Profile update failed\");\n      }\n      localStorage.setItem(\"ProfileData\", JSON.stringify(data));\n      Swal.fire({\n        icon: \"success\",\n        title: '<span style=\"color: black;\">Profile Updated Successfully</span>',\n        showConfirmButton: true,\n        iconColor: \"green\",\n        background: `#fff`\n      });\n    } catch (error) {\n      setError(error.message);\n      Swal.fire({\n        icon: \"error\",\n        title: '<span style=\"color: black;\">Update Failed</span>',\n        html: `<span style=\"color: red;\">${error.message}</span>`,\n        iconColor: \"red\",\n        background: `#fff`\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    ProfileData,\n    loading,\n    error,\n    handleChange,\n    handleSubmit\n  };\n}\n_s(useProfile, \"Rc6GFKJmi9DSeaAhMDnA4bUPgow=\");\nexport default useProfile;","map":{"version":3,"names":["useState","Swal","useProfile","_s","ProfileData","setProfileData","name","email","phone","gender","loading","setLoading","error","setError","handleChange","e","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","localStorage","setItem","fire","icon","title","showConfirmButton","iconColor","background","message","html"],"sources":["C:/Users/Khushi Yadav/OneDrive/Desktop/SARC_ctm_assignment/Centralised-SARC/centralised-frontend/src/hooks/useProfile.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction useProfile() {\r\n  const [ProfileData, setProfileData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfileData({\r\n      ...ProfileData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:8000/auth/profile/\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(ProfileData),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.error || \"Profile update failed\");\r\n      }\r\n\r\n      localStorage.setItem(\"ProfileData\", JSON.stringify(data));\r\n\r\n      Swal.fire({\r\n        icon: \"success\",\r\n        title: '<span style=\"color: black;\">Profile Updated Successfully</span>',\r\n        showConfirmButton: true,\r\n        iconColor: \"green\",\r\n        background: `#fff`,\r\n      });\r\n\r\n    } catch (error) {\r\n      setError(error.message);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: '<span style=\"color: black;\">Update Failed</span>',\r\n        html: `<span style=\"color: red;\">${error.message}</span>`,\r\n        iconColor: \"red\",\r\n        background: `#fff`,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return {\r\n    ProfileData,\r\n    loading,\r\n    error,\r\n    handleChange,\r\n    handleSubmit,\r\n  };\r\n}\r\n\r\nexport default useProfile;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,aAAa;AAE9B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC;IAC7CM,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAET,IAAI;MAAEU;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCZ,cAAc,CAAC;MACb,GAAGD,WAAW;MACd,CAACE,IAAI,GAAGU;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBR,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,WAAW;MAClC,CAAC,CAAC;MAEF,MAAMuB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACf,KAAK,IAAI,uBAAuB,CAAC;MACxD;MAEAmB,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEP,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAEzD1B,IAAI,CAACgC,IAAI,CAAC;QACRC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,iEAAiE;QACxEC,iBAAiB,EAAE,IAAI;QACvBC,SAAS,EAAE,OAAO;QAClBC,UAAU,EAAE;MACd,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC2B,OAAO,CAAC;MACvBtC,IAAI,CAACgC,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,kDAAkD;QACzDK,IAAI,EAAE,6BAA6B5B,KAAK,CAAC2B,OAAO,SAAS;QACzDF,SAAS,EAAE,KAAK;QAChBC,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC,SAAS;MACR3B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IACLP,WAAW;IACXM,OAAO;IACPE,KAAK;IACLE,YAAY;IACZI;EACF,CAAC;AACH;AAACf,EAAA,CAtEQD,UAAU;AAwEnB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}