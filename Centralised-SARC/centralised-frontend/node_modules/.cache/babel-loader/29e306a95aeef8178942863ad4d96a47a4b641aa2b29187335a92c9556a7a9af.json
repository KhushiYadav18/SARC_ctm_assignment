{"ast":null,"code":"var _s = $RefreshSig$();\n// useRegister.js\nimport { useState } from 'react';\nconst useRegister = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const registerUser = async formData => {\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/auth/register/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSuccess('Registration successful! Check your email for verification.');\n      } else {\n        setError(data.error || 'An error occurred during registration.');\n      }\n    } catch (err) {\n      setError('Something went wrong. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    registerUser,\n    loading,\n    error,\n    success\n  };\n};\n_s(useRegister, \"bdaps1xnP9dmMej+/MzMjSIQHco=\");\nexport default useRegister;","map":{"version":3,"names":["useState","useRegister","_s","loading","setLoading","error","setError","success","setSuccess","registerUser","formData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err"],"sources":["C:/Users/Khushi Yadav/OneDrive/Desktop/SARC_ctm_assignment/Centralised-SARC/centralised-frontend/src/hooks/useRegister.js"],"sourcesContent":["// useRegister.js\r\nimport { useState } from 'react';\r\n\r\nconst useRegister = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [success, setSuccess] = useState(null);\r\n\r\n    const registerUser = async (formData) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setSuccess(null);\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:8000/auth/register/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                setSuccess('Registration successful! Check your email for verification.');\r\n            } else {\r\n                setError(data.error || 'An error occurred during registration.');\r\n            }\r\n        } catch (err) {\r\n            setError('Something went wrong. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return { registerUser, loading, error, success };\r\n};\r\n\r\nexport default useRegister;\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMS,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACrCN,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MACjC,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACbZ,UAAU,CAAC,6DAA6D,CAAC;MAC7E,CAAC,MAAM;QACHF,QAAQ,CAACY,IAAI,CAACb,KAAK,IAAI,wCAAwC,CAAC;MACpE;IACJ,CAAC,CAAC,OAAOgB,GAAG,EAAE;MACVf,QAAQ,CAAC,+CAA+C,CAAC;IAC7D,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,OAAO;IAAEK,YAAY;IAAEN,OAAO;IAAEE,KAAK;IAAEE;EAAQ,CAAC;AACpD,CAAC;AAACL,EAAA,CAlCID,WAAW;AAoCjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}