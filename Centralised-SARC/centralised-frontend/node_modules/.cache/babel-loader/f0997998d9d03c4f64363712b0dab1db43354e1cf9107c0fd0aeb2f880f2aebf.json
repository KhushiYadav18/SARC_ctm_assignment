{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\n\n// Define a custom hook for managing the user profile data\nfunction useProfile() {\n  _s();\n  var _JSON$parse;\n  const [profileData, setProfileData] = useState({\n    black_bg: '#000' // Set initial value as black background\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState('#000'); // Set URL as black background\n\n  const userData = localStorage.getItem('userData');\n  const accessToken = (_JSON$parse = JSON.parse(userData)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.access;\n  console.log(accessToken);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfileData({\n      ...profileData,\n      [name]: value\n    });\n  };\n  const fetchProfileData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/authenticate/profile', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch profile data');\n      }\n      const data = await response.json();\n      setProfileData(data);\n      setUrl(data.black_bg || '#000'); // Default to black if no image is provided\n      console.log(data);\n      setLoading(false);\n    } catch (error) {\n      setError(error);\n      setLoading(false);\n    }\n  };\n  const updateProfileData = async () => {\n    try {\n      const formData = new FormData();\n      Object.entries(profileData).forEach(([key, value]) => {\n        formData.append(key, value);\n      });\n      if (typeof profileData.black_bg === 'string' && profileData.black_bg.startsWith('#')) {\n        formData.delete('black_bg'); // Remove color if it's not an image\n      }\n      const response = await fetch('http://127.0.0.1:8000/api/authenticate/profile', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        },\n        body: formData\n      });\n      const responseData = await response.json();\n      if (!response.ok) {\n        Swal.fire({\n          icon: 'error',\n          title: '<span style=\"color: black;\">Error</span>',\n          html: `<span style=\"color: beige;\">${responseData.error || 'Something went wrong'}</span>`,\n          iconColor: 'brown',\n          background: `#000` // Set Swal background to black\n        });\n      } else {\n        Swal.fire({\n          icon: 'success',\n          title: '<span style=\"color: black;\">Profile updated successfully</span>',\n          showConfirmButton: true,\n          iconColor: 'brown',\n          background: `#000` // Set Swal background to black\n        }).then(result => {\n          if (result.isConfirmed) {\n            fetchProfileData();\n          }\n        });\n      }\n    } catch (error) {\n      setError(error);\n    }\n  };\n  useEffect(() => {\n    fetchProfileData();\n  }, []);\n  return {\n    profileData,\n    loading,\n    error,\n    handleChange,\n    updateProfileData,\n    setProfileData,\n    url,\n    setUrl\n  };\n}\n_s(useProfile, \"OxWqe7OfPDns5nUnKeyIZ4DvvrY=\");\nexport default useProfile;","map":{"version":3,"names":["useState","useEffect","Swal","useProfile","_s","_JSON$parse","profileData","setProfileData","black_bg","loading","setLoading","error","setError","url","setUrl","userData","localStorage","getItem","accessToken","JSON","parse","access","console","log","handleChange","e","name","value","target","fetchProfileData","response","fetch","method","headers","ok","Error","data","json","updateProfileData","formData","FormData","Object","entries","forEach","key","append","startsWith","delete","body","responseData","fire","icon","title","html","iconColor","background","showConfirmButton","then","result","isConfirmed"],"sources":["C:/Users/Khushi Yadav/OneDrive/Desktop/SARC_ctm_assignment/Centralised-SARC/centralised-frontend/src/hooks/useProfile.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Swal from 'sweetalert2';\r\n\r\n// Define a custom hook for managing the user profile data\r\nfunction useProfile() {\r\n  const [profileData, setProfileData] = useState({\r\n    black_bg: '#000', // Set initial value as black background\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState('#000'); // Set URL as black background\r\n\r\n  const userData = localStorage.getItem('userData');\r\n  const accessToken = JSON.parse(userData)?.access;\r\n\r\n  console.log(accessToken);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfileData({\r\n      ...profileData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const fetchProfileData = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/authenticate/profile', {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch profile data');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setProfileData(data);\r\n      setUrl(data.black_bg || '#000'); // Default to black if no image is provided\r\n      console.log(data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateProfileData = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      Object.entries(profileData).forEach(([key, value]) => {\r\n        formData.append(key, value);\r\n      });\r\n\r\n      if (typeof profileData.black_bg === 'string' && profileData.black_bg.startsWith('#')) {\r\n        formData.delete('black_bg'); // Remove color if it's not an image\r\n      }\r\n\r\n      const response = await fetch('http://127.0.0.1:8000/api/authenticate/profile', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`, \r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      const responseData = await response.json();\r\n\r\n      if (!response.ok) {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: '<span style=\"color: black;\">Error</span>',\r\n          html: `<span style=\"color: beige;\">${responseData.error || 'Something went wrong'}</span>`,\r\n          iconColor: 'brown',\r\n          background: `#000`, // Set Swal background to black\r\n        });\r\n      } else {\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: '<span style=\"color: black;\">Profile updated successfully</span>',\r\n          showConfirmButton: true,\r\n          iconColor: 'brown',\r\n          background: `#000`, // Set Swal background to black\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            fetchProfileData();\r\n          }\r\n        });\r\n      }\r\n\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  return {\r\n    profileData,\r\n    loading,\r\n    error,\r\n    handleChange,\r\n    updateProfileData,\r\n    setProfileData,\r\n    url,\r\n    setUrl,\r\n  };\r\n}\r\n\r\nexport default useProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}