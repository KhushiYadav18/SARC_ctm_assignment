name: CI-CD Pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Backend Setup and Tests
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          cd Centralised-SARC/centralised-backend
          python -m venv env
          source env/bin/activate
          pip install -r requirements.txt

      - name: Run backend tests
        run: |
          cd Centralised-SARC/centralised-backend
          source env/bin/activate
          python manage.py test

      # Frontend Build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        run: |
          cd Centralised-SARC/centralised-frontend
          npm install --legacy-peer-deps
          chmod -R 777 node_modules/.bin  # Ensure permissions for binaries

      - name: Build frontend
        run: |
          cd Centralised-SARC/centralised-frontend
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Docker Compose
        run: |
          DOCKER_COMPOSE_VERSION=2.21.0
          sudo curl -L "https://github.com/docker/compose/releases/download/v$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Deploy to Docker
        run: |
          sudo docker-compose -f Centralised-SARC/docker-compose.yml up --build -d
